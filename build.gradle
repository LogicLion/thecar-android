ext {
    // Sdk and tools
    minSdkVersion = 19
    targetSdkVersion = 27
    compileSdkVersion = 27

    //app dependencies
    supportLibraryVersion = '27.1.0'
    constraintLayoutVersion = '2.0.0-alpha5'
    guavaVersion = '23.0'
    daggerVersion = '2.15'
    rxandroidVersion = "2.1.1"
    rxjavaVersion = "2.1.6"
    rxkotlinVersion = "2.2.0"
    butterknifeVersion = "8.8.1"
    okhttpVersion = "3.8.1"
    retrofitVersion = "2.7.0"
    gsonVersion = "2.8.1"
    archLifecycleVersion = "1.1.1"
    aspectjVersion = "1.8.13"
    eventbusVersion = "3.1.1"
    buglyVersion = "2.1.5"
    databindingVersion = "3.1.3"
    zxingVersion = "3.3.2"
    glideVersion = "4.7.1"
    multidexVersion = "1.0.3"

    //test dependencies
    junitVersion = '4.12'
    astlVersion = '1.0.2-alpha1'
    espressoVersion = '3.0.1'
    robolectricVersion = "3.7.1"
    mockitoVersion = '2.8.47'
    powermockVersion = '1.7.1'
}

buildscript {
    ext.isDebug = false
    ext.kotlin_version = '1.3.41'
    ext.arouter_register_version = '1.0.2'

    repositories {
        google()
        jcenter()

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.alibaba:arouter-register:$arouter_register_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()

        flatDir {
            dirs 'libs'
        }

    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

//统一依赖库版本
subprojects {
    project.configurations.all {
        resolutionStrategy.eachDependency { details ->
            if (details.requested.group == 'com.android.support'
                    && !details.requested.name.contains('multidex')) {
                details.useVersion "$supportLibraryVersion"
            }
            if (details.requested.group == 'com.android.support'
                    && details.requested.name =='multidex') {
                details.useVersion "$multidexVersion"
            }
            if (details.requested.group == 'android.arch.lifecycle') {
                details.useVersion "$archLifecycleVersion"
            }
        }
    }
}